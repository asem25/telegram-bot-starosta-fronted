name: Frontend CI
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/telegram-bot-starosta-fronted

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install & test
        run: |
          npm ci
          npm test --if-present
      - name: Build
        run: npm run build

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          docker build -t $IMAGE_NAME:sha-${{ github.sha }} -t $IMAGE_NAME:latest .
      - name: Push image
        run: |
          docker push $IMAGE_NAME:sha-${{ github.sha }}
          docker push $IMAGE_NAME:latest

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /opt/bot-stack
            sed -i "s/^FRONT_TAG=.*/FRONT_TAG=sha-${{ github.sha }}/" .env
            docker compose pull frontend
            docker compose up -d frontend
            docker image prune -f
