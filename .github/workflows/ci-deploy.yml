name: Backend CI & Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/telegram-bot-starosta-fronted

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Maven verify (tests)
        run: mvn -B -ntp clean package -DskipTests

  docker-build-push:
    name: Build & Push Docker
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: |
          docker build \
            -t $IMAGE_NAME:sha-${{ github.sha }} \
            -t $IMAGE_NAME:latest \
            .

      - name: Push image
        run: |
          docker push $IMAGE_NAME:sha-${{ github.sha }}
          docker push $IMAGE_NAME:latest
  ssh-test:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Try SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          debug: true
          script: |
            whoami
            hostname
            uptime

  deploy:
    name: Deploy to Server
    needs: ssh-test
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /ru/asem/bot
            sed -i "s/^BACK_TAG=.*/BACK_TAG=sha-${{ github.sha }}/" .env
            docker compose pull backend
            docker compose up -d backend
            docker image prune -f
